{"version":3,"sources":["components/Card/ContactCard.js","components/Card/ContactCard.jsx","components/Form/Form.js","components/Form/Form.jsx","reportWebVitals.js","index.js"],"names":["ContactCard","props","className","name","number","email","Form","handleChange","event","value","target","setState","potentialUser","state","users","counter","bind","handleSubmit","preventDefault","newUser","this","console","log","htmlFor","placeholder","onChange","onClick","e","map","user","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAEeA,G,MCCK,SAACC,GAEnB,OACE,sBAAKC,UAAU,OAAf,UACE,wCAAWD,EAAME,QACjB,gDAAmBF,EAAMG,UACzB,yCAAYH,EAAMI,cCPTC,E,kDCEb,aAAe,IAAD,8BACZ,gBAwBFC,aAAe,SAACC,GACd,IAAMC,EAAQD,EAAME,OAAOD,MAC3B,EAAKE,SAAS,CACdC,cAAc,2BACT,EAAKC,MAAMD,eADH,kBAEVJ,EAAME,OAAOP,KAAOM,OA5BvB,EAAKI,MAAQ,CAACC,MAAO,GAAIF,cAAe,CAAET,KAAM,GAAIC,OAAQ,GAAIC,MAAO,IAAMU,QAAS,GAEtF,EAAKR,aAAe,EAAKA,aAAaS,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALR,E,yDAQDR,GACXA,EAAMU,iBACN,IAAMC,EAAUC,KAAKP,MAAMD,cAC3BS,QAAQC,IAAIH,GAEZC,KAAKT,SAAL,2BAEOS,KAAKP,OAFZ,IAGIC,MAAM,GAAD,mBACAM,KAAKP,MAAMC,OADX,CAEHK,OAINE,QAAQC,IAAIF,KAAKP,MAAMC,S,+BAaf,IAAD,OACP,OACE,gCACA,iCACA,gCACE,uBAAOS,QAAQ,QAAf,mBACA,uBACEpB,KAAK,QACLqB,YAAY,QACZf,MAASW,KAAKP,MAAMR,MACpBoB,SAAUL,KAAKb,kBAGnB,gCACE,uBAAOgB,QAAQ,OAAf,kBACA,uBACEpB,KAAK,OACLqB,YAAY,OACZf,MAAOW,KAAKP,MAAMV,KAClBsB,SAAUL,KAAKb,kBAGnB,gCACE,uBAAOgB,QAAQ,SAAf,qBACA,uBACEpB,KAAK,SACLqB,YAAY,SACZf,MAAOW,KAAKP,MAAMT,OAClBqB,SAAUL,KAAKb,kBAGnB,8BACI,wBAAQmB,QAAS,SAACC,GAAD,OAAO,EAAKV,aAAaU,IAA1C,yBAIFP,KAAKP,MAAMC,MAAMc,KAAI,SAAAC,GAAS,IACvB1B,EAAuB0B,EAAvB1B,KAAME,EAAiBwB,EAAjBxB,MAAOD,EAAUyB,EAAVzB,OACpB,OAAO,cAAC,EAAD,CAAaD,KAAOA,EAAME,MAASA,EAAOD,OAAUA,c,GA1EhD0B,IAAMC,WCSVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bf50a720.chunk.js","sourcesContent":["import ContactCard from \"./ContactCard.jsx\"\n\nexport default ContactCard;","import React from \"react\"\nimport \"./ContactCard.css\"\n\nconst ContactCard = (props) => {\n  \n  return (\n    <div className=\"card\">\n      <h1>Name: {props.name}</h1>\n      <h2>Phone Number: {props.number}</h2>\n      <h2>Email: {props.email}</h2>\n    </div>\n  ) \n\n}\n\n\n\nexport default ContactCard;","import Form from \"./Form.jsx\"\n\nexport default Form;","import React from \"react\"\nimport ContactCard from \"../Card/ContactCard\"\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {users: [], potentialUser: { name: \"\", number: \"\", email: \"\" }, counter: 0}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event){ \n    event.preventDefault();\n    const newUser = this.state.potentialUser;\n    console.log(newUser);\n \n    this.setState(\n      {\n        ...this.state,\n        users: [\n          ...this.state.users,\n          newUser],\n        \n    } \n    )\n    console.log(this.state.users);\n  }\n  \n  handleChange = (event) => {\n    const value = event.target.value\n    this.setState({ \n    potentialUser: {\n      ...this.state.potentialUser,\n      [event.target.name]: value \n    }\n  })\n}\n\n  render() {\n    return ( \n      <div>\n      <form> \n      <div> \n        <label htmlFor='email'>Email</label> \n        <input  \n          name='email'\n          placeholder='Email' \n          value = {this.state.email} \n          onChange={this.handleChange} \n        /> \n      </div> \n      <div> \n        <label htmlFor='name'>Name</label> \n        <input \n          name='name' \n          placeholder='Name'\n          value={this.state.name} \n          onChange={this.handleChange} \n        /> \n      </div> \n      <div> \n        <label htmlFor='number'>Number </label> \n        <input \n          name='number' \n          placeholder='Number'\n          value={this.state.number} \n          onChange={this.handleChange} \n        /> \n      </div>\n      <div> \n          <button onClick={(e) => this.handleSubmit(e)}>Submit</button> \n        </div> \n      </form>\n      { \n        this.state.users.map(user => {\n        const {name, email, number} = user;\n        return <ContactCard name ={name} email = {email} number = {number} />\n      } \n      )} \n      </div>\n    );\n  }\n}\n\nexport default Form;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import ContactCard from \"./components/Card/ContactCard.js\"\nimport Form from \"./components/Form/Form.js\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Form />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}